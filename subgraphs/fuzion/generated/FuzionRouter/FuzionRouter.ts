// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ModuleRatingUpdated extends ethereum.Event {
  get params(): ModuleRatingUpdated__Params {
    return new ModuleRatingUpdated__Params(this);
  }
}

export class ModuleRatingUpdated__Params {
  _event: ModuleRatingUpdated;

  constructor(event: ModuleRatingUpdated) {
    this._event = event;
  }

  get module(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get rater(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get rating(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get totalRating(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalCount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ModuleRegistered extends ethereum.Event {
  get params(): ModuleRegistered__Params {
    return new ModuleRegistered__Params(this);
  }
}

export class ModuleRegistered__Params {
  _event: ModuleRegistered;

  constructor(event: ModuleRegistered) {
    this._event = event;
  }

  get module(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get moduleType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PaymasterCreated extends ethereum.Event {
  get params(): PaymasterCreated__Params {
    return new PaymasterCreated__Params(this);
  }
}

export class PaymasterCreated__Params {
  _event: PaymasterCreated;

  constructor(event: PaymasterCreated) {
    this._event = event;
  }

  get paymaster(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class FuzionRouter__getModuleRatingDataResultValue0Struct extends ethereum.Tuple {
  get accumulativeRating(): BigInt {
    return this[0].toBigInt();
  }

  get accumulativeRatingCount(): BigInt {
    return this[1].toBigInt();
  }
}

export class FuzionRouter extends ethereum.SmartContract {
  static bind(address: Address): FuzionRouter {
    return new FuzionRouter("FuzionRouter", address);
  }

  calculatePaymasterAddress(
    _salt: Bytes,
    _owner: Address,
    _feeTo: Address,
  ): Address {
    let result = super.call(
      "calculatePaymasterAddress",
      "calculatePaymasterAddress(bytes32,address,address):(address)",
      [
        ethereum.Value.fromFixedBytes(_salt),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_feeTo),
      ],
    );

    return result[0].toAddress();
  }

  try_calculatePaymasterAddress(
    _salt: Bytes,
    _owner: Address,
    _feeTo: Address,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "calculatePaymasterAddress",
      "calculatePaymasterAddress(bytes32,address,address):(address)",
      [
        ethereum.Value.fromFixedBytes(_salt),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_feeTo),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  factory(): Address {
    let result = super.call("factory", "factory():(address)", []);

    return result[0].toAddress();
  }

  try_factory(): ethereum.CallResult<Address> {
    let result = super.tryCall("factory", "factory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getModuleRatingData(
    _module: Address,
  ): FuzionRouter__getModuleRatingDataResultValue0Struct {
    let result = super.call(
      "getModuleRatingData",
      "getModuleRatingData(address):((uint128,uint128))",
      [ethereum.Value.fromAddress(_module)],
    );

    return changetype<FuzionRouter__getModuleRatingDataResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getModuleRatingData(
    _module: Address,
  ): ethereum.CallResult<FuzionRouter__getModuleRatingDataResultValue0Struct> {
    let result = super.tryCall(
      "getModuleRatingData",
      "getModuleRatingData(address):((uint128,uint128))",
      [ethereum.Value.fromAddress(_module)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<FuzionRouter__getModuleRatingDataResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  hasRatedModule(_rater: Address, _module: Address): boolean {
    let result = super.call(
      "hasRatedModule",
      "hasRatedModule(address,address):(bool)",
      [ethereum.Value.fromAddress(_rater), ethereum.Value.fromAddress(_module)],
    );

    return result[0].toBoolean();
  }

  try_hasRatedModule(
    _rater: Address,
    _module: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasRatedModule",
      "hasRatedModule(address,address):(bool)",
      [ethereum.Value.fromAddress(_rater), ethereum.Value.fromAddress(_module)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isModuleRegistered(_module: Address): boolean {
    let result = super.call(
      "isModuleRegistered",
      "isModuleRegistered(address):(bool)",
      [ethereum.Value.fromAddress(_module)],
    );

    return result[0].toBoolean();
  }

  try_isModuleRegistered(_module: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isModuleRegistered",
      "isModuleRegistered(address):(bool)",
      [ethereum.Value.fromAddress(_module)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _paymasterFactoryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreatePaymasterCall extends ethereum.Call {
  get inputs(): CreatePaymasterCall__Inputs {
    return new CreatePaymasterCall__Inputs(this);
  }

  get outputs(): CreatePaymasterCall__Outputs {
    return new CreatePaymasterCall__Outputs(this);
  }
}

export class CreatePaymasterCall__Inputs {
  _call: CreatePaymasterCall;

  constructor(call: CreatePaymasterCall) {
    this._call = call;
  }

  get _salt(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _feeTo(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _alias(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _initData(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class CreatePaymasterCall__Outputs {
  _call: CreatePaymasterCall;

  constructor(call: CreatePaymasterCall) {
    this._call = call;
  }
}

export class RateModuleCall extends ethereum.Call {
  get inputs(): RateModuleCall__Inputs {
    return new RateModuleCall__Inputs(this);
  }

  get outputs(): RateModuleCall__Outputs {
    return new RateModuleCall__Outputs(this);
  }
}

export class RateModuleCall__Inputs {
  _call: RateModuleCall;

  constructor(call: RateModuleCall) {
    this._call = call;
  }

  get _module(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _rating(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class RateModuleCall__Outputs {
  _call: RateModuleCall;

  constructor(call: RateModuleCall) {
    this._call = call;
  }
}

export class RegisterModuleCall extends ethereum.Call {
  get inputs(): RegisterModuleCall__Inputs {
    return new RegisterModuleCall__Inputs(this);
  }

  get outputs(): RegisterModuleCall__Outputs {
    return new RegisterModuleCall__Outputs(this);
  }
}

export class RegisterModuleCall__Inputs {
  _call: RegisterModuleCall;

  constructor(call: RegisterModuleCall) {
    this._call = call;
  }

  get _module(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RegisterModuleCall__Outputs {
  _call: RegisterModuleCall;

  constructor(call: RegisterModuleCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
